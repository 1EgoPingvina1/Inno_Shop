name: CI

on:
  push:
    branches:
      - dev
      - master

jobs:
  build-product-api:
    # Define the OS to run on (Linux, Windows, or Mac)
    runs-on: ubuntu-latest

    # Define environment variables
    env:
      DOTNET_NOLOGO: true

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up .NET Core environment
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x' # Use the version of .NET Core/SDK your project targets

      # Restore the dependencies for the solution
      - name: Restore dependencies
        run: dotnet restore

      # Build the solution
      - name: Build the solution
        run: dotnet build Inno_Shop.Product.API/Inno_Shop.Product.API.csproj --no-restore --configuration Release
        
      # Publish the app for deployment (optional step, based on your requirements)
      - name: Publish the API
        run: dotnet publish Inno_Shop.Product.API/Inno_Shop.Product.API.csproj --configuration Release --output ./output/product_api

      # Example of uploading build artifacts (optional)
      - name: Upload artifact
        uses: actions/upload-artifact@v3.2.1-node20
        with:
          name: PublishedAPI-Product
          path: ./output/product_api
          
  build-auth-api:
    needs: build-product-api
    # Define the OS to run on (Linux, Windows, or Mac)
    runs-on: ubuntu-latest

    # Define environment variables
    env:
      DOTNET_NOLOGO: true

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up .NET Core environment
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x' # Use the version of .NET Core/SDK your project targets

      # Restore the dependencies for the solution
      - name: Restore dependencies
        run: dotnet restore

      # Build the solution
      - name: Build the solution
        run: dotnet build Inno_Shop.Auth.Service/Inno_Shop.Auth.Service.csproj --no-restore --configuration Release
        
      # Publish the app for deployment (optional step, based on your requirements)
      - name: Publish the API
        run: dotnet publish Inno_Shop.Auth.Service/Inno_Shop.Auth.Service.csproj --configuration Release --output ./output/auth_service

      # Example of uploading build artifacts (optional)
      - name: Upload artifact
        uses: actions/upload-artifact@v3.2.1-node20
        with:
          name: PublishedAPI-Auth
          path: ./output/auth_service
